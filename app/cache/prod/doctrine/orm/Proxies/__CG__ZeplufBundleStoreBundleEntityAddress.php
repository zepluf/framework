<?php

namespace Proxies\__CG__\Zepluf\Bundle\StoreBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Address extends \Zepluf\Bundle\StoreBundle\Entity\Address implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getAccountId()
    {
        $this->__load();
        return parent::getAccountId();
    }

    public function getFirstName()
    {
        $this->__load();
        return parent::getFirstName();
    }

    public function getLastName()
    {
        $this->__load();
        return parent::getLastName();
    }

    public function getGender()
    {
        $this->__load();
        return parent::getGender();
    }

    public function getCompanyName()
    {
        $this->__load();
        return parent::getCompanyName();
    }

    public function getAddressLine1()
    {
        $this->__load();
        return parent::getAddressLine1();
    }

    public function getSuburb()
    {
        $this->__load();
        return parent::getSuburb();
    }

    public function getPostcode()
    {
        $this->__load();
        return parent::getPostcode();
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function getZoneId()
    {
        $this->__load();
        return parent::getZoneId();
    }

    public function getCountry()
    {
        $this->__load();
        return parent::getCountry();
    }

    public function getCountryId()
    {
        $this->__load();
        return parent::getCountryId();
    }

    public function isPrimary()
    {
        $this->__load();
        return parent::isPrimary();
    }

    public function getFormat()
    {
        $this->__load();
        return parent::getFormat();
    }

    public function setFormat($format)
    {
        $this->__load();
        return parent::setFormat($format);
    }

    public function getFullName()
    {
        $this->__load();
        return parent::getFullName();
    }

    public function setAccountId($accountId)
    {
        $this->__load();
        return parent::setAccountId($accountId);
    }

    public function getAddressFormatId()
    {
        $this->__load();
        return parent::getAddressFormatId();
    }

    public function getAddressFormat()
    {
        $this->__load();
        return parent::getAddressFormat();
    }

    public function setPrimary($value)
    {
        $this->__load();
        return parent::setPrimary($value);
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setFirstName($name)
    {
        $this->__load();
        return parent::setFirstName($name);
    }

    public function setLastName($name)
    {
        $this->__load();
        return parent::setLastName($name);
    }

    public function setGender($gender)
    {
        $this->__load();
        return parent::setGender($gender);
    }

    public function setAddressLine1($addressLine)
    {
        $this->__load();
        return parent::setAddressLine1($addressLine);
    }

    public function setSuburb($suburb)
    {
        $this->__load();
        return parent::setSuburb($suburb);
    }

    public function setPostcode($postcode)
    {
        $this->__load();
        return parent::setPostcode($postcode);
    }

    public function setCity($city)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function setState($state)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function setZoneId($zoneId)
    {
        $this->__load();
        return parent::setZoneId($zoneId);
    }

    public function setCountry($country)
    {
        $this->__load();
        return parent::setCountry($country);
    }

    public function setCountryId($countryId)
    {
        $this->__load();
        return parent::setCountryId($countryId);
    }

    public function setCompanyName($name)
    {
        $this->__load();
        return parent::setCompanyName($name);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'addressId', 'accountId', 'gender', 'companyName', 'firstName', 'lastName', 'addressLine1', 'suburb', 'postcode', 'city', 'state', 'countryId', 'zoneId');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}